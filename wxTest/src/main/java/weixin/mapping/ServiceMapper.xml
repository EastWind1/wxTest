<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="weixin.dao.ServiceMapper" >
  <resultMap id="BaseResultMap" type="weixin.model.Service" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="kind" property="kind" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="DECIMAL" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, kind, description, price
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select distinct
    <include refid="Base_Column_List" />
    from service
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="get" resultMap="BaseResultMap" parameterType="java.util.HashMap">
        select distinct
        service.id, service.name, service.kind, service.description, service.price, server_service.serverId,server.name as serverName
        from service,server_service,server
        where 1=1 and service.id=server_service.serviceId and server_service.serverId=server.id
        <if test="name != null">
            and service.name like "%"#{name,jdbcType=VARCHAR}"%"
        </if>
        <if test="kind != null">
            and service.kind=#{kind,jdbcType=VARCHAR}
        </if>
        <if test="id != null">
            and service.id=#{id,jdbcType=VARCHAR}
        </if>
        order by service.id desc
        <if test="pageIndex !=null">
            limit #{pageIndex},#{rows}
        </if>
  </select>
  <select id="getCount" resultType="int" parameterType="java.util.HashMap">
        select
        count(distinct id)
        from service,server_service
        where 1=1
        <if test="name != null">
            and service.name like "%"#{name,jdbcType=VARCHAR}"%"
        </if>
        <if test="kind != null">
            and service.kind=#{kind,jdbcType=VARCHAR}
        </if>
        <if test="id != null">
            and service.id=#{id,jdbcType=VARCHAR}
        </if>
  </select>
  <select id="getMy" resultMap="BaseResultMap" parameterType="java.util.HashMap">
        select distinct
        service.id, service.name, service.kind, service.description, service.price
        from service,server_service
        where 1=1
        	and service.id=server_service.serviceId
        	and server_service.serverId=#{uid,jdbcType=VARCHAR}
        <if test="name != null">
            and service.name like "%"#{name,jdbcType=VARCHAR}"%"
        </if>
        <if test="kind != null">
            and service.kind=#{kind,jdbcType=VARCHAR}
        </if>
        <if test="state != null">
            and service.state=#{state,jdbcType=VARCHAR}
        </if>
        <if test="id != null">
            and service.id=#{id,jdbcType=VARCHAR}
        </if>
        order by service.id desc
        <if test="pageIndex !=null">
            limit #{pageIndex},#{rows}
        </if>
  </select>
  <select id="getMyCount" resultType="int" parameterType="java.util.HashMap">
        select
        count(distinct id)
        from service,server_service
        where 1=1
        	and service.id=server_service.serviceId
        	and server_service.serverId=#{uid,jdbcType=VARCHAR}
        <if test="name != null">
            and service.name like "%"#{name,jdbcType=VARCHAR}"%"
        </if>
        <if test="kind != null">
            and service.kind=#{kind,jdbcType=VARCHAR}
        </if>
        <if test="id != null">
            and service.id=#{id,jdbcType=VARCHAR}
        </if>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from service
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="weixin.model.Service" useGeneratedKeys="true" keyProperty="id">
    insert into service (id, name, kind, 
      description, price)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{kind,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{price,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="weixin.model.Service" useGeneratedKeys="true" keyProperty="id">
    insert into service
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="kind != null" >
        kind,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="price != null" >
        price,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="kind != null" >
        #{kind,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="weixin.model.Service" >
    update service
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="kind != null" >
        kind = #{kind,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="weixin.model.Service" >
    update service
    set name = #{name,jdbcType=VARCHAR},
      kind = #{kind,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>